#BlueJ class context
comment0.target=StatisticEngine
comment0.text=\r\n\ This\ class\ is\ responsible\ for\ calculating\ the\ eight\ statistics.\r\n\r\n\ @author\ Sebastian\ Malos,\ Yusuf\ Yacoobali,\ Moonis\ Altaf\ and\ Kamil\ Duszak.\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=StatisticEngine()
comment1.text=\r\n\ Constructor\ for\ the\ StatisticEngine\ class.\r\n
comment10.params=
comment10.target=void\ calculateMostPopularBorough()
comment10.text=\r\n\ Method\ goes\ through\ a\ list\ of\ all\ the\ boroughs\ and\ compares\ all\ their\ total\ properties\ with\ \r\n\ the\ max\ to\ calculate\ the\ most\ popular\ borough.\r\n
comment11.params=property
comment11.target=void\ checkIfBookForLessThanWeek(AirbnbListing)
comment11.text=\r\n\ Checks\ if\ the\ specified\ propety\ is\ available\ to\ book\ for\ less\ than\ 7\ days,\ and\ if\ it\ is\ \r\n\ it\ increments\ the\ variable\ bookForLessThanWeek.\r\n
comment12.params=property
comment12.target=void\ addHost(AirbnbListing)
comment12.text=\r\n\ The\ host\ of\ the\ specified\ property\ is\ added\ to\ a\ hash\ map\ alongside\ the\ amount\ of\ properties\ they\ own.\ \r\n
comment13.params=
comment13.target=void\ calculateHostWithMostProperties()
comment13.text=\r\n\ Method\ goes\ through\ a\ list\ of\ all\ the\ hosts\ and\ compares\ all\ their\ total\ properties\ \r\n\ with\ the\ max\ to\ calculate\ the\ host\ with\ the\ most\ properties.\r\n
comment14.params=property
comment14.target=void\ checkAllYear(AirbnbListing)
comment14.text=\r\n\ If\ the\ specified\ property\ is\ available\ all\ year\ than\ the\ numberOfPropertiesAllYear\ variable\ increases\ by\ one.\r\n
comment15.params=
comment15.target=int\ getNumberOfEntireHomes()
comment15.text=\r\n\ @return\ the\ number\ of\ entire\ homes\r\n
comment16.params=
comment16.target=double\ getAverageNumberOfreviewsPerProperty()
comment16.text=\r\n\ @return\ the\ average\ number\ of\ reviews\ per\ property\r\n
comment17.params=
comment17.target=int\ getTotalAvailableProperties()
comment17.text=\r\n\ @return\ the\ total\ number\ of\ available\ properties\r\n
comment18.params=
comment18.target=java.lang.String\ getMostExpensiveBorough()
comment18.text=\r\n\ @return\ the\ most\ expensive\ borough\r\n
comment19.params=
comment19.target=java.lang.String\ getMostPopularBorough()
comment19.text=\r\n\ @return\ the\ most\ popular\ borough\r\n
comment2.params=
comment2.target=void\ runStatistics()
comment2.text=\r\n\ A\ for\ loop\ which\ goes\ through\ the\ whole\ database\ and\ runs\ different\ methods\ on\ each\ property.\r\n\ The\ current\ property\ that\ the\ loop\ is\ viewing\ is\ passed\ through\ all\ these\ methods.\r\n\ At\ the\ end\ of\ the\ loop\ some\ calculation\ methods\ are\ called.\r\n
comment20.params=
comment20.target=int\ getBookForLessThanWeek()
comment20.text=\r\n\ @return\ properties\ availabe\ for\ less\ than\ a\ week\r\n
comment21.params=
comment21.target=java.lang.String\ getHostWithMostProperties()
comment21.text=\r\n\ @return\ the\ host\ with\ the\ most\ properties\r\n
comment22.params=
comment22.target=int\ getNumberOfPropertiesAllYear()
comment22.text=\r\n\ @return\ the\ number\ of\ propeties\ available\ all\ year\r\n
comment23.params=
comment23.target=int\ getTotalProperties()
comment23.text=\r\n\ @return\ the\ total\ number\ of\ properties\ \r\n
comment3.params=property
comment3.target=void\ checkAvailability(AirbnbListing)
comment3.text=\r\n\ Checks\ if\ property\ is\ available\ or\ not\ by\ calling\ a\ method\ in\ the\ AirbnbListing\ class.\r\n\ If\ the\ property\ is\ available\ it\ increments\ the\ field\ by\ one.\r\n\ @param\ property\ A\ property\ of\ type\ AirbnbListing\r\n
comment4.params=property
comment4.target=void\ checkIfEntireHome(AirbnbListing)
comment4.text=\r\n\ Checks\ if\ property\ is\ an\ Entire\ home.\r\n\ If\ the\ property\ is\ then\ increments\ the\ field\ by\ one.\r\n\ @param\ property\ A\ property\ of\ type\ AirbnbListing\r\n
comment5.params=property
comment5.target=void\ calculateTotalReviews(AirbnbListing)
comment5.text=\r\n\ Method\ Increments\ the\ amount\ of\ total\ reviews\ with\ the\ specified\ property's\ review\ count\r\n
comment6.params=
comment6.target=void\ calculateAverageReviews()
comment6.text=\r\n\ Method\ calculates\ the\ average\ reviews\ by\ deviding\ the\ total\ reviews\ by\ the\ total\ properties\r\n
comment7.params=property
comment7.target=void\ addBoroughCost(AirbnbListing)
comment7.text=\r\n\ Method\ adds\ a\ property\ and\ its\ minimum\ cost\ to\ the\ boroughPrice\ hashMap.\ If\ the\ borough\ hasnt\ been\ entered\ then\ it\ simply\ adds\ the\ cost\ of\ the\ current\ proeprty.\r\n\ If\ the\ borough\ of\ the\ specified\ property\ has\ already\ been\ added\ to\ the\ map\ it\ replaces\ it\ by\ incrementing\ the\ price\ with\ the\ minimum\ price\ of\ the\ current\ property.\r\n
comment8.params=
comment8.target=void\ checkMostExpensiveBorough()
comment8.text=\r\n\ Method\ goes\ through\ a\ list\ of\ all\ the\ boroughs\ and\ compares\ all\ their\ minimum\ prices\ with\ the\ max\ to\ calculate\ the\ most\ expensive\ borough\r\n
comment9.params=property
comment9.target=void\ addBoroughProperty(AirbnbListing)
comment9.text=\r\n\ Method\ incremnets\ the\ total\ number\ of\ properties\ in\ a\ specified\ borough.\r\n\ Adds\ the\ borough\ of\ the\ specified\ property\ to\ the\ hash\ map,\ borough\ property.\r\n\ If\ it\ already\ exits\ it\ overwrites\ by\ incrementing\ and\ if\ not\ then\ places\ 1\ in\ the\ value\ of\ the\ map.\r\n
numComments=24
